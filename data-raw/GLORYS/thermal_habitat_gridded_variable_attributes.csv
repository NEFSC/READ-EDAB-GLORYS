Attribute Name,Type,Definitions,Example Implementation,Priority,Source,Variable Type,Value
_FillValue,float,Assigned value in the variable designating a null or missing observation. Using NaN (Not a Number) to specify this attribute is strongly discouraged.,_FillValue = -32767s ;,required,CF 1.10,measurement/auxillary/quality variables,0
add_offset,float,Intercept of scaling relationship applied to transform measuement data to appropriate geophysical quantity representations. Should not be used if the scale_factor is '1' and add_offset is '0',add_offset = 273.15f ;,required if applicable,CF 1.10,measurement/auxillary/quality variables,NA
ancillary_variables,string,This attribute can be used to associate two different variables with one another. This attribute is generally used to associate with the given geophysical variable another variable containing metadata about each value in the given geophysical variable. An example is the flag variables used to show the status of each value in the geophysical variable. The standard name for the ancillary variable could be standard name of the geophysical variable followed by standard name modifier. See the comments for an example.,,recommended,CF,,NA
axis,char,"This attribute is specifically for the variables time, latitude, longitude, and altitude when they are identified as the coordinate variables. The values of each variable coordinates axis are as follows: time = “T”, latitude = “Y”, longitude = “X”, and altitude = “Z”.","The axis attribute can only be attached to true, 1-D coordinate variables. If the true coordinates are X and Y (a projected coordinate system, for example), then the axis attribute is to be applied to those and not to the 2-D latitude and longitude auxiliary coordinate variables. If the X and Y coordinates are not included in the file, then no variable should have an 'X' or 'Y' axis attribute attached. Additionally, the 'Z' axis attribute can be applied to any 1-D coordinate variable that represents vertical position, such as depth or pressure.",recommended if applicable,CF,,NA
bounds,string,Name of the variable which contains the vertices of the cell boundaries. This attribute must be present for all the coordinate variables which are used within cell_methods for representing non-point statistics.,It is important to have bounds for a geophysical coordinate variable if a geophysical variable is extensive along it.,,CF,,NA
calendar,string,"This attribute is used to show the type of calendar used for representing dates within a netcdf file. The possible values are gregorian(default), proleptic_gregorian, all_leap, 360_day, julian, or none.",,recommended if applicable,CF,,NA
cell_measures,string,"This attribute has the form ""measure_type:variable_name"" where measure_type could be one of the two: ""area"" or ""volume"" and variable_name holds the name of the variable holding the areas or volumes corresponding to the cells. This attribute is necessitated by the fact that the cell areas or volumes cannot be determined purely by the boundary points of the cells. One would have to know how they are connected, though it is common to assume great circle connectivity.",This attribute is not a required attribute.,recommended if applicable,CF,,NA
cell_methods,string,"Describes the characteristic of the field. This is a string attribute comprising a list of blank-separated words of the form ""name: method"", e.g. t: mean. The possible values for method are point, sum, maximum, median, mid_range, minimum, mean, mode, standard_deviation and variance. The possible values for name are dimension of the variable, a scalar coordinate variable, a valid standard name, or the word ""area"".",Multiple strings of this form could be repeated if more than one cell method is present. They would be arranged in the order they were applied. CF recommends use of cell_methods for each spatio-temporal dimension and each spatio-temporal scalar coordinate variable.,recommended if applicable,CF,,NA
cf_role,string,"Where feasible a variable with the attribute cf_role should be included. The only acceptable values of cf_role for Discrete Geometry CF data sets are ""=station_id="", ""=profile_id="", and ""=trajectory_id="". The variable carrying the cf_role attribute may have any data type. When a variable is assigned this attribute, it must provide a unique identifier for each feature instance. CF files that contain timeSeries, profile or trajectory featureTypes, should include only a single occurrence of a cf_role attribute; CF files that contain timeSeriesProfile or trajectoryProfile may contain two occurrences, corresponding to the two levels of structure in these feature types.","The cf_role attribute should only be attached to a coordinated variable (See Appendix A). In order for the CF Checker to determine that station_name is indeed a coordinate variable it must be listed as such in the ""coordinates"" attribute.",recommended if applicable,CF,,NA
climatology,string,This attribute points to another variable containing climatological bounds. Climatological bounds are the starting and ending dates for each climatological interval.,,recommended if applicable,CF,,NA
comment,string,Optional attribute field allowing provision of further free-form information about the variable,"comment = ""sea surface temperature from 11 and 12 um (thermal IR) channels"" ;",recommended,CF 1.10,measurement/auxillary/quality variables,NA
comment,string,"Miscellaneous information about the data, not captured elsewhere.","comment = ""MUR = Multi-scale Ultra-high Resolution"" ;",recommended,"ACDD 1.3, CF 1.10",,NA
compress,string,This attribute is used in order to achieve some compression of the data.,,recommended if applicable,CF,,NA
coordinates,string,The coordinates attribute identifies the variables that contain geospatial and temporal coordinates as a space-separated list.,"coordinates = ""time lat lon"";",required,CF 1.10,measurement/auxillary/quality variables,"""time lat lon"""
coordinates,string,This attribute contains a space separated list of all the coordinates corresponding to the variable.The list should contain all the auxiliary coordinate variables and optionally the coordinate variables.,"Also, note that whenever any auxiliary coordinate variable contains a missing value, all other coordinate, auxiliary coordinate and data values corresponding to that element should also contain missing values.",,CF,,NA
coverage_content_type,string,"An ISO 19115-1 code (https://wiki.esipfed.org/ISO_19115_and_19115-2_CodeList_Dictionaries#MD_CoverageContentTypeCode) to indicate the source of the data. For example, image, thematicClassification, physicalMeasurement, auxiliaryInformation, qualityInformation, referenceInformation, modelResult, or coordinate.","coverage_content_type = ""physicalMeasurement"" ;",required,ACDD 1.3,measurement/auxillary/quality variables,physicalMeasurement
flag_masks,unsigned byte,"A number of independent Boolean conditions using bit field notation by setting unique bits in each flag_masks value. The flag_masks attribute is the same type as the variable to which it is attached, and contains a list of values matching unique bit fields. (CF document 3.5 Flags;http://cfconventions.org/Data/cf-conventions/cf-conventions-1.6/build/cf...)","flag_masks = 1b, 2b, 4b, 8b, 16b;",required (as needed),CF 1.10,quality variable,NA
flag_masks,same as type of the variable,(Comma-separated) Describes the binary condition of the flags.,"The boolean conditions are identified by performing bitwide AND of the variable value and the flag_masks. For example, if the variable value is of type unsigned byte and equal to 5 and the flag_masks are 1b, 2b, 4b, 8b, 16b, 32b. The binary encoding of 5 is 00000101 and the binary encoding of the flags are 00000001, 00000010, 00000100, 00001000, 00010000, 00100000. Now bitwide AND of the value with the masks returns 00000001, 00000000, 00000100, 00000000, 00000000, 00000000 respectively or 1b,0,4b,0,0,0,0,0 in decimal. So the masks corresponding to 1b and 4b are ""true"", rest are ""false"". In this example, first two bits are not used. If the variable were 4b, the flag_mask corresponding to 4b would be ""true"" and rest would be ""false"".",recommended if applicable,CF,,NA
flag_meanings,string,"Define the physical meaning of each flag_masks bit field with a single text string. CF allows a single variable to contain both flag_values and flag_masks. The interpretation of the flags in such cases is slightly tricky. In such cases flag_masks is used to ""group"" a set of flag_values into a nested conditional. Please see the example 3.5 in the CF document on how to interpret flag_meanings in such cases. NCEI recommends that boolean and enumerated flags be kept in separate variables.","flag_meanings = ""microwave land ice lake river"" ;",required (as needed),CF 1.10,quality variable,NA
flag_meanings,string,(Space-separated) Interpretation corresponding to each of the flag_values and/or flag_masks,"CF allows a single variable to contain both flag_values and flag_masks. The interpretation of the flags in such cases is slightly tricky. In such cases flag_masks is used to ""group"" a set of flag_values into a nested conditional. Please see the example 3.5 in the CF document on how to interpret flag_meanings in such cases. NCEI recommends that boolean and enumerated flags be kept in separate variables.",recommended if applicable,CF,,NA
flag_values,unsigned byte,"Its values identify the flagged conditions by performing a bitwise AND of the variable value and each flag masks value. For example, if the variable value is of type unsigned byte and equal to 5 and the flag_masks are 1b, 2b, 4b, 8b, 16b, 32b. The binary encoding of 5 is 00000101 and the binary encoding of the flags are 00000001, 00000010, 00000100, 00001000, 00010000, 00100000. Now bitwide AND of the value with the masks returns 00000001, 00000000, 00000100, 00000000, 00000000, 00000000 respectively or 1b,0,4b,0,0,0,0,0 in decimal. So the masks corresponding to 1b and 4b are ""true"", rest are ""false"".","flag_values = 1b, 5b ;",required (as needed),CF 1.10,quality variable,NA
flag_values,same as type of the variable,(Comma-separated) flag_values maps values in the variable to values in the flag_meanings in order to interpret the meanings of the values in the array.,Please follow the guidance in the Description.,recommended if applicable,CF,,NA
grid_mapping,string,"Describes the horizontal coordinate system used by the data. The grid_mapping attribute should point to a variable which would contain the parameters corresponding to the projection system. There are typically several parameters associated with each coordinate system. CF defines a separate attributes for each of the parameters. Some examples are ""semi_major_axis"", ""inverse_flattening"", ""false_easting""","grid_mapping = ""semi_major_axis"";",recommended,CF 1.10,measurement/auxillary/quality variables,NA
grid_mapping,string,"Describes the horizontal coordinate system used by the data. The grid_mapping attribute should point to a variable which would contain the parameters corresponding to the coordinate system. There are typically several parameters associated with each coordinate system. CF defines a separate attributes for each of the parameters. Some examples are ""semi_major_axis"", ""inverse_flattening"", ""false_easting""","All the attributes within a grid_mapping variable are described in http://www.cfconventions.org/1.6.html#grid-mappings-and-projections. For all the measurements based on WSG84 which is the default coordinate system used for GPS measurements, the following parameters should be used: crs:grid_mapping_name = ""latitude_longitude""; crs:longitude_of_prime_meridian = 0.0 ; crs:semi_major_axis = 6378137.0 ; crs:inverse_flattening = 298.257223563 ; Here ""crs"" represents the name of the variable pointed to by grid_mapping attribute.",recommended if applicable,CF,,NA
long_name,string,"A descriptive (i.e., human-readable) name for the variable. Avoid including acronyms, abbreviations, and units.","long_name = ""sea surface temperature"" ;",required,"ACDD 1.3, CF 1.10",measurement/auxillary/quality variables,NA
missing_value,same datatype as variable,"This attribute is not treated in any special way by generic applications, but is often useful documentation and may be used by specific applications. The missing_value attribute can be a scalar or vector containing values indicating conditions of missing data. These values should all be outside the valid range so that generic applications will treat them as missing.","When scale_factor and add_offset are used for packing, the value(s) of the missing_value attribute should be specified in the domain of the data in the file (the packed data), so that missing values can be detected before the scale_factor and add_offset are applied.",recommended if applicable,CF,,NA
sample_dimension,string,An attribute which identifies a count variable and names the sample dimension to which it applies. The count variable indicates that the contiguous ragged array representation is being used for a collection of features.,,recommended if applicable,CF,,NA
scale_factor,float,Slope of scaling relationship applied to transform measuement data to appropriate geophysical quantity representations. Should not be used if the scale_factor is '1' and add_offset is '0',scale_factor = 0.005f ;,required if applicable,CF 1.10,measurement/auxillary/quality variables,NA
standard_name,string,"Reserved for names that are part of the CF standard name list. If no CF standard name is appropriate for the variable, this attribute should be excluded.(https://cfconventions.org/Data/cf-standard-names/36/build/cf-standard-name-table.html).","standard_name = ""sea_surface_skin_temperature"" ;",required,"ACDD 1.3, CF 1.10",measurement/auxillary/quality variables,NA
units,string,"The units of the variable's data values. This attribute is required for all variables that represent dimensional quantities. We recommend adhering to values of units supported by the UDUNITS-2 library. A unitless (i.e., dimensionless, in the physical sense) variable is indicated by excluding this attribute, or if a dimensionless unit identifier is common practice in the target user community it is acceptable to include them (e.g., 'psu' for ocean salinity).","units = ""kelvin"" ;",required,"ACDD 1.3, CF 1.10",measurement/auxillary/quality variables,days
valid_max,same datatype as variable,"Maximum possible value of a variable. Note that if the data values are packed with scale_factor and add_offset, these values are packed too.",,recommended,CF,,NA
valid_min,same datatype as variable,"Minimum possible value of a variable. Note that if the data values are packed with scale_factor and add_offset, these values are packed too.",,recommended,CF,,NA
valid_range,float,Comma seperated minimum and maximum values of the physical quantity defining the valid measuremnt range. Should be use instead of valid_min and valid_max attributes.,"valid_range = 0.0f, 500.0f;",required,CF 1.10,measurement/auxillary/quality variables,"0, 366"
